{
	"root": true,
	"parser": "@typescript-eslint/parser",
	"parserOptions": {
		"ecmaVersion": 6,
		"sourceType": "module"
	},
	"plugins": [
		"@typescript-eslint",
		"jsdoc",
		"header",
		"local"
	],
	"rules": {
		"no-undef": "off",
		"no-unused-vars": "off",
		"constructor-super": "warn",
		"curly": "off",
		"eqeqeq": "warn",
		"no-buffer-constructor": "warn",
		"no-caller": "warn",
		"no-debugger": "warn",
		"no-duplicate-case": "warn",
		"no-duplicate-imports": "off",
		"no-eval": "warn",
		"no-async-promise-executor": "off",
		"no-extra-semi": "warn",
		"no-new-wrappers": "warn",
		"no-redeclare": "off",
		"no-sparse-arrays": "warn",
		"no-throw-literal": "off",
		"no-unsafe-finally": "warn",
		"no-unused-labels": "warn",
		"no-restricted-globals": [
			"warn",
			"name",
			"length",
			"event",
			"closed",
			"external",
			"status",
			"origin",
			"orientation",
			"context"
		], // non-complete list of globals that are easy to access unintentionally
		"no-var": "off",
		"jsdoc/no-types": "warn",
		"semi": "off",
		"@typescript-eslint/semi": "off",
		"@typescript-eslint/naming-convention": [
			"warn",
			{
				"selector": "class",
				"format": [
					"PascalCase"
				]
			}
		],
		"local/code-no-unused-expressions": [
			"off",
			{
				"allowTernary": true
			}
		],
		"code-translation-remind": "off",
		"local/code-no-nls-in-standalone-editor": "warn",
		"local/code-no-standalone-editor": "warn",
		"code-no-unexternalized-strings": "off",
		"local/code-declare-service-brand": "warn",
		"local/code-layering": [
			"warn",
			{
				"common": [],
				"node": [
					"common"
				],
				"browser": [
					"common"
				],
				"electron-sandbox": [
					"common",
					"browser"
				],
				"electron-main": [
					"common",
					"node"
				]
			}
		],
		"header/header": [
			2,
			"block",
			[
				"---------------------------------------------------------------------------------------------",
				" *  Copyright (c) Microsoft Corporation. All rights reserved.",
				" *  Licensed under the Source EULA. See License.txt in the project root for license information.",
				" *--------------------------------------------------------------------------------------------"
			]
		]
	},
	"overrides": [
		{
			"files": [
				"*.js"
			],
			"rules": {
				"jsdoc/no-types": "off"
			}
		},
		{
			"files": [
				"**/sql/**"
			],
			"rules": {
				"code-no-test-only": "off",
				"strict": ["warn", "never"],
				"code-no-unexternalized-strings": "off"
			}
		},
		{
			"files": [
				"**/vscode.d.ts",
				"**/vscode.proposed.d.ts"
			],
			"rules": {
				"local/vscode-dts-create-func": "warn",
				"local/vscode-dts-literal-or-types": "warn",
				"local/vscode-dts-string-type-literals": "warn",
				"local/vscode-dts-interface-naming": "warn",
				"local/vscode-dts-cancellation": "warn",
				"local/vscode-dts-use-thenable": "warn",
				"local/vscode-dts-region-comments": "warn",
				"local/vscode-dts-vscode-in-comments": "warn",
				"local/vscode-dts-provider-naming": [
					"warn",
					{
						"allowed": [
							"FileSystemProvider",
							"TreeDataProvider",
							"TestProvider",
							"CustomEditorProvider",
							"CustomReadonlyEditorProvider",
							"TerminalLinkProvider",
							"AuthenticationProvider",
							"NotebookContentProvider"
						]
					}
				],
				"local/vscode-dts-event-naming": [
					"warn",
					{
						"allowed": [
							"onCancellationRequested",
							"event"
						],
						"verbs": [
							"accept",
							"change",
							"close",
							"collapse",
							"create",
							"delete",
							"discover",
							"dispose",
							"edit",
							"end",
							"expand",
							"grant",
							"hide",
							"invalidate",
							"open",
							"override",
							"perform",
							"receive",
							"register",
							"remove",
							"rename",
							"save",
							"send",
							"start",
							"terminate",
							"trigger",
							"unregister",
							"write"
						]
					}
				]
			}
		},
		{
			"files": [
				"src/**/*.ts"
			],
			"rules": {
				"local/code-no-look-behind-regex": "warn",
				"local/code-import-patterns": [
					"warn",
					{
						// imports that are allowed in all files of layers:
						// - browser
						// - electron-sandbox
						"when": "hasBrowser",
						"allow": [
							"vs/css!./**/*",

							// {{SQL CARBON EDIT}}
							"azdata",
							"azurecore",
							"mssql",
							"vscode",

							"ansi_up",
							"angular2-grid",
							"azdataGraph",
							"@angular/forms",
							"@angular/common",
							"@angular/platform-browser",
							"@angular/platform-browser-dynamic",
							"@angular/core",
							"@angular/router",
							"chart.js",
							"chartjs-adapter-moment",
							"querystring",
							"rxjs/add/observable/fromPromise",
							"rxjs/Observable",
							"rxjs/add/observable/of",
							"rxjs/Subject",
							"rxjs/Subscription",
							"rxjs/Rx",
							"sanitize-html",
							"plotly.js",
							"turndown",
							"html-to-image",
							"mark.js",
							"gridstack"
						]
					},
					{
						// imports that are allowed in all files of layers:
						// - node
						// - electron-main
						"when": "hasNode",
						"allow": [
							"@parcel/watcher",
							"@vscode/sqlite3",
							"@vscode/vscode-languagedetection",
							"@vscode/ripgrep",
							"@vscode/iconv-lite-umd",
							"@vscode/policy-watcher",
							"@vscode/proxy-agent",
							"@vscode/spdlog",
							"@vscode/windows-process-tree",
							"assert",
							"child_process",
							"console",
							"cookie",
							"crypto",
							"electron",
							"events",
							"fs",
							"graceful-fs",
							"http",
							"https",
							"minimist",
							"native-keymap",
							"native-watchdog",
							"net",
							"node-pty",
							"os",
							"path",
							"perf_hooks",
							"stream",
							"string_decoder",
							"tas-client-umd",
							"tls",
							"url",
							"util",
							"v8-inspect-profiler",
							"vscode-regexpp",
							"vscode-textmate",
							"worker_threads",
							"xterm",
							"xterm-addon-canvas",
							"xterm-addon-image",
							"xterm-addon-search",
							"xterm-addon-serialize",
							"xterm-addon-unicode11",
							"xterm-addon-webgl",
							"xterm-headless",
							"yauzl",
							"yazl",
							"zlib",

							// {{SQL CARBON EDIT}}
							"azdata",
							"vscode"
						]
					},
					{
						// imports that are allowed in all /test/ files
						"when": "test",
						"allow": [
							"vs/css.build",
							"assert",
							"sinon",
							"sinon-test",

							// {{SQL CARBON EDIT}}
							"azdata",
							"vscode",
							"typemoq",
							"os",
							"path",
							"fs-extra",
							"uuid"
						]
					},
					// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
					// !!! Do not relax these rules !!!
					// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
					//
					// A path ending in /~ has a special meaning. It indicates a template position
					// which will be substituted with one or more layers.
					//
					// When /~ is used in the target, the rule will be expanded to 14 distinct rules.
					// e.g. "src/vs/base/~" will be expanded to:
					//  - src/vs/base/common
					//  - src/vs/base/worker
					//  - src/vs/base/browser
					//  - src/vs/base/electron-sandbox
					//  - src/vs/base/node
					//  - src/vs/base/electron-main
					//  - src/vs/base/test/common
					//  - src/vs/base/test/worker
					//  - src/vs/base/test/browser
					//  - src/vs/base/test/electron-sandbox
					//  - src/vs/base/test/node
					//  - src/vs/base/test/electron-main
					//
					// When /~ is used in the restrictions, it will be replaced with the correct
					// layers that can be used e.g. "src/vs/base/electron-sandbox" will be able
					// to import "{common,browser,electron-sanbox}", etc.
					//
					// It is possible to use /~ in the restrictions property even without using it in
					// the target property by adding a layer property.
					{
						"target": "src/{vs,sql}/base/~",
						"restrictions": [
							"{vs,sql}/base/~",
							"vs/platform/*/~"
						]
					},
					{
						"target": "src/{vs,sql}/base/parts/*/~",
						"restrictions": [
							"{vs,sql}/base/~",
							"{vs,sql}/base/parts/*/~"
						]
					},
					{
						"target": "src/{vs,sql}/platform/*/~",
						"restrictions": [
							"{vs,sql}/base/~",
							"{vs,sql}/base/parts/*/~",
							"{vs,sql}/platform/*/~",
							"tas-client-umd", // node module allowed even in /common/
							"@microsoft/1ds-core-js", // node module allowed even in /common/
							"@microsoft/1ds-post-js", // node module allowed even in /common/

							"azdata",
							"azurecore",
							"mssql",
							"sql/workbench/~",
							"sql/workbench/api/~"
						]
					},
					{
						"target": "src/{vs,sql}/editor/~",
						"restrictions": [
							"{vs,sql}/base/~",
							"{vs,sql}/base/parts/*/~",
							"{vs,sql}/platform/*/~",
							"{vs,sql}/editor/~"
						]
					},
					{
						"target": "src/{vs,sql}/editor/contrib/*/~",
						"restrictions": [
							"{vs,sql}/base/~",
							"{vs,sql}/base/parts/*/~",
							"{vs,sql}/platform/*/~",
							"{vs,sql}/editor/~",
							"{vs,sql}/editor/contrib/*/~"
						]
					},
					{
						"target": "src/{vs,sql}/editor/standalone/~",
						"restrictions": [
							"{vs,sql}/base/~",
							"{vs,sql}/base/parts/*/~",
							"{vs,sql}/platform/*/~",
							"{vs,sql}/editor/~",
							"{vs,sql}/editor/contrib/*/~",
							"{vs,sql}/editor/standalone/~"
						]
					},
					{
						"target": "src/{vs,sql}/editor/editor.all.ts",
						"layer": "browser",
						"restrictions": [
							"{vs,sql}/base/~",
							"{vs,sql}/base/parts/*/~",
							"{vs,sql}/platform/*/~",
							"{vs,sql}/editor/~",
							"{vs,sql}/editor/contrib/*/~"
						]
					},
					{
						"target": "src/{vs,sql}/editor/editor.worker.ts",
						"layer": "worker",
						"restrictions": [
							"{vs,sql}/base/~",
							"{vs,sql}/base/parts/*/~",
							"{vs,sql}/platform/*/~",
							"{vs,sql}/editor/~"
						]
					},
					{
						"target": "src/{vs,sql}/editor/{editor.api.ts,editor.main.ts}",
						"layer": "browser",
						"restrictions": [
							"{vs,sql}/base/~",
							"{vs,sql}/base/parts/*/~",
							"{vs,sql}/editor/~",
							"{vs,sql}/editor/contrib/*/~",
							"{vs,sql}/editor/standalone/~",
							"{vs,sql}/editor/*"
						]
					},
					{
						"target": "src/{vs,sql}/workbench/~",
						"restrictions": [
							"{vs,sql}/base/~",
							"{vs,sql}/base/parts/*/~",
							"{vs,sql}/platform/*/~",
							"{vs,sql}/editor/~",
							"{vs,sql}/editor/contrib/*/~",
							"{vs,sql}/workbench/~",
							"{vs,sql}/workbench/services/*/~",
							"assert",
							{
								"when": "test",
								"pattern": "{vs,sql}/workbench/contrib/*/~"
							}, // TODO@layers
							{
								"when": "test",
								"pattern": "sql/workbench/contrib/notebook/test/*"
							},
							{
								"when": "test",
								"pattern": "sql/workbench/api/common/sqlExtHostTypes"
							},
							"azdata",
							"{vs,sql}/workbench/contrib/*/~",
							"{vs,sql}/workbench/api/~"
						]
					},
					{
						"target": "src/{vs,sql}/workbench/api/~",
						"restrictions": [
							"vscode",
							"{vs,sql}/base/~",
							"{vs,sql}/base/parts/*/~",
							"{vs,sql}/platform/*/~",
							"{vs,sql}/editor/~",
							"{vs,sql}/editor/contrib/*/~",
							"{vs,sql}/workbench/api/~",
							"{vs,sql}/workbench/~",
							"{vs,sql}/workbench/services/*/~",
							"{vs,sql}/workbench/contrib/*/~",
							"{vs,sql}/workbench/contrib/terminalContrib/*/~",

							"azdata",
							"azurecore",
							"mssql",
							"vs/css!sql/media/icons/common-icons" // {{SQL CARBON TODO}} This shouldn't be imported here
						]
					},
					{
						"target": "src/{vs,sql}/workbench/services/*/~",
						"restrictions": [
							"{vs,sql}/base/~",
							"{vs,sql}/base/parts/*/~",
							"{vs,sql}/platform/*/~",
							"{vs,sql}/editor/~",
							"{vs,sql}/editor/contrib/*/~",
							"{vs,sql}/workbench/~",
							"{vs,sql}/workbench/services/*/~",
							{
								"when": "test",
								"pattern": "{vs,sql}/workbench/contrib/*/~"
							}, // TODO@layers
							"tas-client-umd", // node module allowed even in /common/
							"vscode-textmate", // node module allowed even in /common/
							"@vscode/vscode-languagedetection", // node module allowed even in /common/

							"azdata",
							"sql/base/query/~",
							"sql/workbench/api/common/*",
							{ // TODO: We shouldn't have this
								"when": "test",
								"pattern": "sql/workbench/test/browser/*"
							},
							"{vs,sql}/workbench/api/~",
							"{vs,sql}/workbench/contrib/*/~"
						]
					},
					{
						"target": "src/{vs,sql}/workbench/contrib/*/~",
						"restrictions": [
							"{vs,sql}/base/~",
							"{vs,sql}/base/parts/*/~",
							"{vs,sql}/platform/*/~",
							"{vs,sql}/editor/~",
							"{vs,sql}/editor/contrib/*/~",
							"{vs,sql}/workbench/~",
							"{vs,sql}/workbench/services/*/~",
							"{vs,sql}/workbench/contrib/*/~",
							"sql/workbench/api/common/*",
							"vscode-notebook-renderer", // Type only import
							{
								"when": "hasBrowser",
								"pattern": "xterm"
							}, // node module allowed even in /browser/
							{
								"when": "hasBrowser",
								"pattern": "xterm-addon-*"
							}, // node module allowed even in /browser/
							{
								"when": "hasBrowser",
								"pattern": "vscode-textmate"
							}, // node module allowed even in /browser/
							"sql/base/query/browser/*",
							"sql/platform/browser/*/*",
							"azdata"
						]
					},
					{
						"target": "src/{vs,sql}/workbench/contrib/welcome/*/~",
						"restrictions": [
							"{vs,sql}/base/~",
							"{vs,sql}/base/parts/*/~",
							"{vs,sql}/platform/*/~",
							"{vs,sql}/editor/~",
							"{vs,sql}/editor/contrib/*/~",
							"{vs,sql}/workbench/~",
							"{vs,sql}/workbench/services/*/~",
							"{vs,sql}/workbench/contrib/*/~",
							"sql/workbench/api/common/*",
							"{vs,sql}/workbench/contrib/welcome/*/~",
							"vscode-notebook-renderer", // Type only import
							{
								"when": "hasBrowser",
								"pattern": "xterm"
							}, // node module allowed even in /browser/
							{
								"when": "hasBrowser",
								"pattern": "xterm-addon-*"
							}, // node module allowed even in /browser/
							{
								"when": "hasBrowser",
								"pattern": "vscode-textmate"
							} // node module allowed even in /browser/
						]
					},
					{
						"target": "src/{vs,sql}/workbench/contrib/terminalContrib/*/~",
						"restrictions": [
							"{vs,sql}/base/~",
							"{vs,sql}/base/parts/*/~",
							"{vs,sql}/platform/*/~",
							"{vs,sql}/editor/~",
							"{vs,sql}/editor/contrib/*/~",
							"{vs,sql}/workbench/~",
							"{vs,sql}/workbench/services/*/~",
							"{vs,sql}/workbench/contrib/*/~",
							// Only allow terminalContrib to import from itself, this works because
							// terminalContrib is one extra folder deep
							"{vs,sql}/workbench/contrib/terminalContrib/*/~",
							"vscode-notebook-renderer", // Type only import
							{
								"when": "hasBrowser",
								"pattern": "xterm"
							}, // node module allowed even in /browser/
							{
								"when": "hasBrowser",
								"pattern": "xterm-addon-*"
							}, // node module allowed even in /browser/
							{
								"when": "hasBrowser",
								"pattern": "vscode-textmate"
							} // node module allowed even in /browser/
						]
					},
					{
						"target": "src/{vs,sql}/code/~",
						"restrictions": [
							"{vs,sql}/base/~",
							"{vs,sql}/base/parts/*/~",
							"{vs,sql}/platform/*/~",
							"{vs,sql}/editor/~",
							"{vs,sql}/editor/contrib/*/~",
							"{vs,sql}/code/~",
							{
								"when": "hasBrowser",
								"pattern": "{vs,sql}/workbench/workbench.web.main"
							},
							{
								"when": "hasBrowser",
								"pattern": "{vs,sql}/workbench/~"
							},
							{
								"when": "hasBrowser",
								"pattern": "{vs,sql}/workbench/services/*/~"
							}
						]
					},
					{
						"target": "src/{vs,sql}/server/~",
						"restrictions": [
							"{vs,sql}/base/~",
							"{vs,sql}/base/parts/*/~",
							"{vs,sql}/platform/*/~",
							"{vs,sql}/workbench/~",
							"{vs,sql}/workbench/api/~",
							"{vs,sql}/workbench/services/*/~",
							"{vs,sql}/workbench/contrib/*/~",
							"{vs,sql}/server/~"
						]
					},
					{
						"target": "src/{vs,sql}/workbench/contrib/terminal/terminal.all.ts",
						"layer": "browser",
						"restrictions": [
							"{vs,sql}/workbench/contrib/**"
						]
					},
					{
						"target": "src/{vs,sql}/workbench/workbench.common.main.ts",
						"layer": "browser",
						"restrictions": [
							"{vs,sql}/base/~",
							"{vs,sql}/base/parts/*/~",
							"{vs,sql}/platform/*/~",
							"{vs,sql}/editor/~",
							"{vs,sql}/editor/contrib/*/~",
							"{vs,sql}/editor/editor.all",
							"{vs,sql}/workbench/~",
							"{vs,sql}/workbench/api/~",
							"{vs,sql}/workbench/services/*/~",
							"{vs,sql}/workbench/contrib/*/~",
							"{vs,sql}/workbench/contrib/terminal/terminal.all"
						]
					},
					{
						"target": "src/{vs,sql}/workbench/workbench.web.main.ts",
						"layer": "browser",
						"restrictions": [
							"{vs,sql}/base/~",
							"{vs,sql}/base/parts/*/~",
							"{vs,sql}/platform/*/~",
							"{vs,sql}/editor/~",
							"{vs,sql}/editor/contrib/*/~",
							"{vs,sql}/editor/editor.all",
							"{vs,sql}/workbench/~",
							"{vs,sql}/workbench/api/~",
							"{vs,sql}/workbench/services/*/~",
							"{vs,sql}/workbench/contrib/*/~",
							"{vs,sql}/workbench/workbench.common.main"
						]
					},
					{
						"target": "src/{vs,sql}/workbench/workbench.desktop.main.ts",
						"layer": "electron-sandbox",
						"restrictions": [
							"{vs,sql}/base/*/~",
							"{vs,sql}/base/parts/*/~",
							"{vs,sql}/platform/*/~",
							"{vs,sql}/editor/~",
							"{vs,sql}/editor/contrib/*/~",
							"{vs,sql}/editor/editor.all",
							"{vs,sql}/workbench/~",
							"{vs,sql}/workbench/api/~",
							"{vs,sql}/workbench/services/*/~",
							"{vs,sql}/workbench/contrib/*/~",
							"{vs,sql}/workbench/workbench.common.main"
						]
					},
					{
						"target": "src/{vs,sql}/workbench/{workbench.desktop.main.nls.js,workbench.web.main.nls.js}",
						"restrictions": []
					},
					{
						"target": "src/vs/{loader.d.ts,css.ts,css.build.ts,monaco.d.ts,nls.ts,nls.build.ts,nls.mock.ts}",
						"restrictions": []
					},
					// {{SQL CARBON EDIT}}
					{
						"target": "src/sql/{azdata.d.ts,azdata.proposed.d.ts,azdata.test.d.ts}",
						"restrictions": [
							"vscode"
						]
					},
					{
						"target": "src/vscode-dts/**",
						"restrictions": []
					},
					{
						"target": "src/{bootstrap-amd.js,bootstrap-fork.js,bootstrap-node.js,bootstrap-window.js,bootstrap.js,cli.js,main.js,server-cli.js,server-main.js}",
						"restrictions": []
					}
				]
			}
		},
		{
			"files": [
				"src/{vs,sql}/server/*",

				// {{SQL CARBON EDIT}} Ignore our own that don't use our copyright
				"extensions/azuremonitor/src/prompts/**",
				"extensions/azuremonitor/src/typings/findRemove.d.ts",
				"extensions/kusto/src/prompts/**",
				"extensions/mssql/src/hdfs/webhdfs.ts",
				"extensions/mssql/src/prompts/**",
				"extensions/mssql/src/typings/bufferStreamReader.d.ts",
				"extensions/mssql/src/typings/findRemove.d.ts",
				"extensions/notebook/resources/jupyter_config/**",
				"extensions/notebook/src/intellisense/text.ts",
				"extensions/notebook/src/prompts/**",
				"extensions/resource-deployment/src/typings/linuxReleaseInfo.d.ts",
				"src/sql/base/browser/ui/table/plugins/autoSizeColumns.plugin.ts",
				"src/sql/base/browser/ui/table/plugins/cellSelectionModel.plugin.ts",
				"src/sql/base/browser/ui/table/plugins/checkboxSelectColumn.plugin.ts",
				"src/sql/base/browser/ui/table/plugins/headerFilter.plugin.ts",
				"src/sql/base/browser/ui/table/plugins/rowDetailView.ts",
				"src/sql/base/browser/ui/table/plugins/rowMoveManager.plugin.ts",
				"src/sql/base/browser/ui/table/plugins/rowSelectionModel.plugin.ts",
				"src/sql/workbench/services/notebook/browser/outputs/factories.ts",
				"src/sql/workbench/services/notebook/browser/outputs/mimemodel.ts",
				"src/sql/workbench/services/notebook/browser/outputs/registry.ts",
				"src/sql/workbench/services/notebook/browser/outputs/renderMimeInterfaces.ts",
				"src/sql/workbench/services/notebook/browser/outputs/sanitizer.ts",
				"src/sql/workbench/contrib/notebook/browser/models/outputProcessor.ts",
				"src/sql/workbench/contrib/notebook/browser/turndownPluginGfm.ts",
				"src/sql/workbench/services/notebook/common/nbformat.ts",
				"src/sql/workbench/services/notebook/browser/outputs/renderers.ts",
				"src/sql/workbench/services/notebook/browser/outputs/tableRenderers.ts"
			],
			"rules": {
				"header/header": [
					// hygiene.js still checks that all files (even those in this directory) are MIT licensed.
					"off"
				]
			}
		}
	]
}

